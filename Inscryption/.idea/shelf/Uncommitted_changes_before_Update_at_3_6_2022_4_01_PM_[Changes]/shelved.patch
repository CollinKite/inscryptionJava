Index: src/main/java/com/example/inscryption/Controller/Game.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.inscryption.Controller;\r\n\r\nimport com.example.inscryption.Model.Deck;\r\nimport com.example.inscryption.Model.Card;\r\nimport com.example.inscryption.View.Menu;\r\n\r\nimport java.util.ArrayList;\r\n\r\n//TODO\r\n/*\r\nadd creatures\r\nget board set up\r\nBlank card\r\nattacks\r\nplayer hp / enemy hp\r\nspells\r\nmana mechanics\r\nenergy system -- maybe add more later.\r\ncard specials + symbols\r\nwinning/losing\r\npoints? - in case we need persistent high score\r\ncard packs? - if we have time and want to -- tied to persistent player deck\r\nturn order\r\ndeck size\r\n?bosses with pre-built decks? -> levels?? -> Boss unique cards?\r\n\r\n */\r\n\r\npublic class Game {\r\n    Menu menu = new Menu();\r\n    Deck masterDeck = new Deck();\r\n\r\n    ArrayList<Card> playerHand = new ArrayList<>();\r\n    ArrayList<Card> computerHand = new ArrayList<>();\r\n\r\n    public void start(){\r\n        createCreatures();\r\n\r\n        switch(menu.startMenu()) {\r\n            case 1:\r\n                initGame();\r\n                break;\r\n            case 5:\r\n                System.out.println(\"Exit successful, this time...\");\r\n                break;\r\n        }\r\n    }\r\n\r\n    public void initGame(){\r\n        boolean gameIsRunning = true;\r\n        boolean playerTurn = true;\r\n        masterDeck.shuffle();\r\n        while (playerHand.size() < 3){\r\n            playerHand.add(masterDeck.drawCard());\r\n        }\r\n        while(gameIsRunning){\r\n            if (playerTurn) {\r\n                playerHand.add(masterDeck.drawCard());\r\n                playCards();\r\n                endTurn();\r\n                //show board at end\r\n                playerTurn = false;\r\n            } else {\r\n                computerHand.add(masterDeck.drawCard());\r\n                playCards();\r\n                endTurn();\r\n                //show board\r\n                playerTurn = true;\r\n            }\r\n        }\r\n    }\r\n\r\n    public void printCards(ArrayList<Card> cards) {\r\n        //Prints cards next to each other line by line.\r\n\r\n        String CardTop = \"\";\r\n        String firstLine = \"\";\r\n        String blankSpace = \"\";\r\n        String specialLine = \"\";\r\n        String secondLine = \"\";\r\n        String thirdLine = \"\";\r\n        String cardBottom = \"\";\r\n        for (int i = 0; i < cards.size(); i++) {\r\n\r\n\r\n            CardTop += \"┌──────────┐\";\r\n            firstLine += \"│\" + cards.get(i).getName();\r\n            blankSpace += \"│          │\";\r\n            specialLine += \"│\" + cards.get(i).getSpecial1() + \"   \" + cards.get(i).getSpecial2() + \" │\";\r\n            secondLine += \"│\" + cards.get(i).getAtk() + \"/\" + cards.get(i).getHp() + \"       │\";\r\n            thirdLine += \"│\" + cards.get(i).getCost() + \"         │\";\r\n            cardBottom += \"└──────────┘\";\r\n\r\n            //╚══════╝\r\n\r\n\r\n            for (int j = 0; j < (10 - cards.get(i).getName().length()); j++) {\r\n                firstLine += \" \";\r\n            }\r\n\r\n            firstLine += \"│\";\r\n        }\r\n        CardTop += \"\\n\";\r\n        firstLine += \"\\n\";\r\n        blankSpace += \"\\n\";\r\n        specialLine += \"\\n\";\r\n        secondLine += \"\\n\";\r\n        thirdLine += \"\\n\";\r\n\r\n\r\n        System.out.println(CardTop + firstLine + blankSpace + specialLine + secondLine + thirdLine + cardBottom);\r\n    }\r\n\r\n\r\n\r\n\r\n    public void createCreatures(){\r\n        //Creatures to be used in the game\r\n        Card goblin = new Card(1, \"Goboboblin\", \"Goblin\", 2, 1, \"   \", \"   \");\r\n        Card HUNYBUNZ = new Card(4, \"Beast\", \"Hunter\", 0, 6, \"   \", \"   \");\r\n        Card lizard = new Card(1, \"Beast\", \"Lizard\", 1, 1, \"   \"/*Poison? */, \"   \");\r\n        Card darren = new Card(6, \"Beast\", \"Homeless\", 0, 6, \"   \", \"   \");\r\n        Card hogRidah = new Card(1, \"Beast\", \"Zombie\", 1, 2, \"   \", \"   \");\r\n\r\n\r\n//my undead army is pogg and cute and i'm tired of the backlash\r\n        Card zombie = new Card(1, \"Undead\", \"Zombie\", 1, 2, \"   \", \"   \");\r\n        Card skeleton = new Card(2, \"Undead\", \"Skeleton\", 2, 1, \"   \", \"   \");\r\n        Card skeletonArcher = new Card(2, \"Undead\", \"Skeleton Archer\", 3, 1, \"   \", \"   \");\r\n                    //special needed\r\n        Card necromancer = new Card(4, \"Unundead\", \"Necromancer\", 0, 1, \"   \", \"   \");\r\n                    //could have flying or some ghost ability\r\n        Card ghost = new Card(3, \"Undead\", \"Ghost\", 2, 2, \"   \", \"   \");\r\n        Card wraith = new Card(4, \"Undead\", \"Wraith\", 4, 2, \"   \", \"   \");\r\n                    //maybe add that revenant resurrects after died, but like, weaker. or kills what killed it.\r\n        Card revenant = new Card(5, \"Undead\", \"Revenant\", 2, 5, \"   \", \"   \");\r\n        Card revenant = new Card(5, \"Undead\", \"Revenant\", 2, 5, \"   \", \"   \");\r\n        Card revenant = new Card(5, \"Undead\", \"Revenant\", 2, 5, \"   \", \"   \");\r\n        Card revenant = new Card(5, \"Undead\", \"Revenant\", 2, 5, \"   \", \"   \");\r\n\r\n        //adding my undead army - 10 creatures\r\n        masterDeck.addCard(zombie);\r\n        masterDeck.addCard(skeleton);\r\n        masterDeck.addCard(skeletonArcher);\r\n        masterDeck.addCard(necromancer);\r\n        masterDeck.addCard(ghost);\r\n        masterDeck.addCard(wraith);\r\n        masterDeck.addCard(revenant);\r\n        masterDeck.addCard();\r\n        masterDeck.addCard();\r\n        masterDeck.addCard();\r\n\r\n\r\n        masterDeck.addCard(goblin);\r\n        masterDeck.addCard(HUNYBUNZ);\r\n        masterDeck.addCard();\r\n        masterDeck.addCard();\r\n\r\n\r\n    }\r\n\r\n    public void playCards() {\r\n        boolean turn = true;\r\n        while (turn) {\r\n                printCards(playerHand);\r\n            }\r\n\r\n    }\r\n    public void endTurn(){\r\n\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/com/example/inscryption/Controller/Game.java b/src/main/java/com/example/inscryption/Controller/Game.java
--- a/src/main/java/com/example/inscryption/Controller/Game.java	
+++ b/src/main/java/com/example/inscryption/Controller/Game.java	
@@ -120,7 +120,7 @@
         Card HUNYBUNZ = new Card(4, "Beast", "Hunter", 0, 6, "   ", "   ");
         Card lizard = new Card(1, "Beast", "Lizard", 1, 1, "   "/*Poison? */, "   ");
         Card darren = new Card(6, "Beast", "Homeless", 0, 6, "   ", "   ");
-        Card hogRidah = new Card(1, "Beast", "Zombie", 1, 2, "   ", "   ");
+        Card hogRider = new Card(1, "Beast", "Hog Rider", 1, 2, "Say N word", "   ");
 
 
 //my undead army is pogg and cute and i'm tired of the backlash
@@ -146,9 +146,22 @@
         masterDeck.addCard(ghost);
         masterDeck.addCard(wraith);
         masterDeck.addCard(revenant);
-        masterDeck.addCard();
-        masterDeck.addCard();
-        masterDeck.addCard();
+        masterDeck.addCard(ghoul);
+        masterDeck.addCard(lich);
+        masterDeck.addCard(mummy);
+
+
+//unnatural horrors
+        Card angryBread = new Card(1, "Horror", "Zombie", 1, 2, "   ", "   ");
+        Card noodleFarmMassacure = new Card(1, "Horror", "Zombie", 1, 2, "   ", "   ");
+        Card crookedPicture = new Card(1, "Horror", "Zombie", 1, 2, "   ", "   ");
+        Card aDogThatLooksLikeACat = new Card(1, "Horror", "Zombie", 1, 2, "   ", "   ");
+        Card GearlessBike = new Card(1, "Horror", "Zombie", 1, 2, "   ", "   ");
+        Card combedSpeghetti = new Card(1, "Horror", "Zombie", 1, 2, "   ", "   ");
+        Card steppingInWaterWhileWearingSocks = new Card(1, "Horror", "Zombie", 1, 2, "   ", "   ");
+        Card whiteOreos = new Card(1, "Horror", "Zombie", 1, 2, "   ", "   ");
+        Card fingersThatAreTooLong = new Card(1, "Horror", "Zombie", 1, 2, "   ", "   ");
+        Card wipingFromTheFront = new Card(1, "Undead", "Zombie", 1, 2, "   ", "   ");
 
 
         masterDeck.addCard(goblin);
Index: .idea/codestream.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"CodeStream\">\r\n    <option name=\"teamId\" value=\"621ce130d44a2b72849f9d70\" />\r\n    <option name=\"webViewContext\" value=\"{&quot;chatProviderAccess&quot;:&quot;strict&quot;,&quot;newPostEntryPoint&quot;:&quot;JB Commit Detected&quot;,&quot;currentTeamId&quot;:&quot;621ce130d44a2b72849f9d70&quot;,&quot;currentStreamId&quot;:&quot;&quot;,&quot;pullRequestCheckoutBranch&quot;:false,&quot;isRepositioning&quot;:false,&quot;onboardStep&quot;:0,&quot;panelStack&quot;:[&quot;landing-redirect&quot;],&quot;hasFocus&quot;:true,&quot;channelFilter&quot;:&quot;all&quot;,&quot;channelsMuteAll&quot;:false,&quot;codemarkFileFilter&quot;:&quot;all&quot;,&quot;codemarkTypeFilter&quot;:&quot;all&quot;,&quot;codemarkTagFilter&quot;:&quot;all&quot;,&quot;codemarkBranchFilter&quot;:&quot;all&quot;,&quot;codemarkAuthorFilter&quot;:&quot;all&quot;,&quot;codemarksFileViewStyle&quot;:&quot;inline&quot;,&quot;codemarksShowArchived&quot;:false,&quot;codemarksShowResolved&quot;:false,&quot;codemarksWrapComments&quot;:false,&quot;showFeedbackSmiley&quot;:true,&quot;route&quot;:{&quot;name&quot;:&quot;login&quot;,&quot;params&quot;:{}},&quot;spatialViewShowPRComments&quot;:false,&quot;sessionStart&quot;:1646232798008,&quot;isFirstPageview&quot;:false,&quot;currentReviewOptions&quot;:{&quot;includeLatestCommit&quot;:true},&quot;currentReviewId&quot;:&quot;&quot;}\" />\r\n  </component>\r\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/codestream.xml b/.idea/codestream.xml
--- a/.idea/codestream.xml	
+++ b/.idea/codestream.xml	
@@ -2,6 +2,6 @@
 <project version="4">
   <component name="CodeStream">
     <option name="teamId" value="621ce130d44a2b72849f9d70" />
-    <option name="webViewContext" value="{&quot;chatProviderAccess&quot;:&quot;strict&quot;,&quot;newPostEntryPoint&quot;:&quot;JB Commit Detected&quot;,&quot;currentTeamId&quot;:&quot;621ce130d44a2b72849f9d70&quot;,&quot;currentStreamId&quot;:&quot;&quot;,&quot;pullRequestCheckoutBranch&quot;:false,&quot;isRepositioning&quot;:false,&quot;onboardStep&quot;:0,&quot;panelStack&quot;:[&quot;landing-redirect&quot;],&quot;hasFocus&quot;:true,&quot;channelFilter&quot;:&quot;all&quot;,&quot;channelsMuteAll&quot;:false,&quot;codemarkFileFilter&quot;:&quot;all&quot;,&quot;codemarkTypeFilter&quot;:&quot;all&quot;,&quot;codemarkTagFilter&quot;:&quot;all&quot;,&quot;codemarkBranchFilter&quot;:&quot;all&quot;,&quot;codemarkAuthorFilter&quot;:&quot;all&quot;,&quot;codemarksFileViewStyle&quot;:&quot;inline&quot;,&quot;codemarksShowArchived&quot;:false,&quot;codemarksShowResolved&quot;:false,&quot;codemarksWrapComments&quot;:false,&quot;showFeedbackSmiley&quot;:true,&quot;route&quot;:{&quot;name&quot;:&quot;login&quot;,&quot;params&quot;:{}},&quot;spatialViewShowPRComments&quot;:false,&quot;sessionStart&quot;:1646232798008,&quot;isFirstPageview&quot;:false,&quot;currentReviewOptions&quot;:{&quot;includeLatestCommit&quot;:true},&quot;currentReviewId&quot;:&quot;&quot;}" />
+    <option name="webViewContext" value="{&quot;chatProviderAccess&quot;:&quot;strict&quot;,&quot;newPostEntryPoint&quot;:&quot;JB Commit Detected&quot;,&quot;currentTeamId&quot;:&quot;621ce130d44a2b72849f9d70&quot;,&quot;currentStreamId&quot;:&quot;&quot;,&quot;pullRequestCheckoutBranch&quot;:false,&quot;isRepositioning&quot;:false,&quot;onboardStep&quot;:0,&quot;panelStack&quot;:[&quot;landing-redirect&quot;],&quot;hasFocus&quot;:false,&quot;channelFilter&quot;:&quot;all&quot;,&quot;channelsMuteAll&quot;:false,&quot;codemarkFileFilter&quot;:&quot;all&quot;,&quot;codemarkTypeFilter&quot;:&quot;all&quot;,&quot;codemarkTagFilter&quot;:&quot;all&quot;,&quot;codemarkBranchFilter&quot;:&quot;all&quot;,&quot;codemarkAuthorFilter&quot;:&quot;all&quot;,&quot;codemarksFileViewStyle&quot;:&quot;inline&quot;,&quot;codemarksShowArchived&quot;:false,&quot;codemarksShowResolved&quot;:false,&quot;codemarksWrapComments&quot;:false,&quot;showFeedbackSmiley&quot;:true,&quot;route&quot;:{&quot;name&quot;:&quot;login&quot;,&quot;params&quot;:{}},&quot;spatialViewShowPRComments&quot;:false,&quot;sessionStart&quot;:1646321649097,&quot;isFirstPageview&quot;:false,&quot;currentReviewOptions&quot;:{&quot;includeLatestCommit&quot;:true},&quot;currentReviewId&quot;:&quot;&quot;}" />
   </component>
 </project>
\ No newline at end of file
